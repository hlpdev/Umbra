name: CMake + vcpkg (multi-OS)

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

jobs:
  build:
    strategy:
      fail-fast: false
      matrix:
        include:
          - os: ubuntu-latest
            triplet: x64-linux
          - os: macos-14
            triplet: arm64-osx
          - os: windows-latest
            triplet: x64-windows
    runs-on: ${{ matrix.os }}

    env:
      VCPKG_FEATURE_FLAGS: manifests,binarycaching,versions,registries
      VCPKG_BINARY_SOURCES: clear;nuget,GitHub,readwrite

    steps:
      - uses: actions/checkout@v4
        with: { submodules: false }

      - name: CMake & Ninja
        uses: lukka/get-cmake@latest

      - name: Ensure Ninja on PATH (fallback)
        uses: ashutoshvarma/setup-ninja@v1.1

      - name: Windows MSVC Requirement
        if: startsWith(runner.os, 'Windows')
        uses: ilammy/msvc-dev-cmd@v1
        with:
          arch: x64

      - name: MacOS Build Deps
        if: startsWith(runner.os, 'macOS')
        run: |
          brew update
          brew install autoconf automake libtool pkg-config

      - name: Linux Build Deps
        if: runner.os == 'Linux'
        run: |
          sudo apt-get update
          sudo apt-get install -y \
            build-essential pkg-config autoconf automake libtool m4 \
            nasm yasm ninja-build python3 git mono-complete ca-certificates-mono

      - name: Setup vcpkg (manifest-aware, cached)
        uses: lukka/run-vcpkg@v11

      - name: Vcpkg Install (Windows)
        if: startsWith(runner.os, 'Windows')
        shell: pwsh
        run: |
          & "${env:VCPKG_ROOT}\vcpkg.exe" install `
          --triplet "${{ matrix.triplet }}" `
          --x-manifest-root="${env:GITHUB_WORKSPACE}" `
          --feature-flags="${env:VCPKG_FEATURE_FLAGS}" --debug

      - name: Vcpkg Install (Linux/MacOS)
        if: runner.os != 'Windows'
        shell: bash
        run: |
          "$VCPKG_ROOT/vcpkg" install \
            --triplet "${{ matrix.triplet }}" \
            --x-manifest-root="${GITHUB_WORKSPACE}" \
            --feature-flags="${VCPKG_FEATURE_FLAGS}" --debug

      - name: Configure (Windows)
        if: startsWith(runner.os, 'Windows')
        run: >
          cmake -S . -B build -G Ninja
          -DCMAKE_C_COMPILER=cl
          -DCMAKE_CXX_COMPILER=cl
          -DCMAKE_BUILD_TYPE=Release
          -DCMAKE_TOOLCHAIN_FILE="${{ env.VCPKG_ROOT }}/scripts/buildsystems/vcpkg.cmake"
          -DVCPKG_TARGET_TRIPLET="${{ matrix.triplet }}"

      - name: Configure (Linux/MacOS)
        if: runner.os != 'Windows'
        run: >
          cmake -S . -B build -G Ninja
          -DCMAKE_BUILD_TYPE=Release
          -DCMAKE_TOOLCHAIN_FILE="${{ env.VCPKG_ROOT }}/scripts/buildsystems/vcpkg.cmake"
          -DVCPKG_TARGET_TRIPLET="${{ matrix.triplet }}"

      - name: Build
        run: cmake --build build --config Release --parallel

      - name: Test
        run: ctest --test-dir build -C Release --output-on-failure